The following documentation explains how to host a Python web application using uWSGI and its default development web server (passing all parameters in the command line). 
We will be hosting a Python application using uWSGI.

First, let’s understand why we need WSGI. WSGI (Web Server Gateway Interface) is a protocol used to host/run an application on a web server, which makes it a web application. 
WSGI provides a common API that allows web servers and application frameworks to interact with each other. In simple terms, WSGI is a protocol that enables communication between
a web server and an application or framework. It forwards requests from a web server to a backend web application or framework, and then passes the responses back to the web 
server to reply to the requestor.

We don’t have a web server installed because uWSGI has a default development web server that will be used to host the Python web application. As we know, the web server can be 
accessed by our clients in a browser by hitting http://publicIP:port. Here, the port number and other details are passed as parameters in the CLI while starting our application 
using uWSGI.

# Create python application
wsgi.py
def application(env, start_response):
    start_response('200 OK', [('Content-Type','text/html')])
    return [b"welcome to my app"]

# Install firewall 
yum install firewalld -y
systemctl status firewalld.service
systemctl start firewalld.service
systemctl enable firewalld.service

# Allow port for accessing our app from browser
sudo firewall-cmd --permanent --add-port=9090/tcp
sudo firewall-cmd --reload

# Allowing the ports at server level to access python application over internet 
Inbound open port 9090 from Any IPv4 

# To find the binary path of uwsgi
find /usr/local -name uwsgi -type f 2>/dev/null

# Start your app
/usr/local/bin/uwsgi --http :9090 --wsgi-file wsgi.py

# Access your app from browser
http://publicIP:9090
